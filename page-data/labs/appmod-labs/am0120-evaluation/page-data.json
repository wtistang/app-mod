{"componentChunkName":"component---src-pages-labs-appmod-labs-am-0120-evaluation-index-mdx","path":"/labs/appmod-labs/am0120-evaluation/","result":{"pageContext":{"frontmatter":{"title":"Liberty Readiness Analysis Introduction","description":null},"relativePagePath":"/labs/appmod-labs/am0120-evaluation/index.mdx","titleType":"page","MdxNode":{"id":"4623d91b-ea30-5b6b-a8d7-7cea8235a783","children":[],"parent":"7f6fc94d-8251-5773-8813-edd4a94c2d63","internal":{"content":"---\ntitle: Liberty Readiness Analysis Introduction\ndescription: \n---\n\nIn this Lab, you walk through the process using the Liberty Readiness Analysis to evaluate the existing WebSphere applications. \n\nThe Liberty Readiness Analysis tool is included in the Cloud Pak for Applications (CP4Apps), it is an integrated tool in the Admin Console of the WebSphere Application Server (WAS) version 9.0.0.11 and above. This tool simplifies the process to evaluate your existing WebSphere applications for moving to WebSphere Liberty in your application modernization journey.\n\nLiberty Readiness Analysis assess the readiness of your enterprise applications for WebSphere Liberty. It answers the following common questions about the Application Modernization Journey:\n*\tHow ready are the applications in my admin console for running in Liberty?\n*\tWhich applications can I move now and which will need to be refactored?\n*\tWill it be easy or problematic to prepare my applications for Liberty?\n*\tWhat resources and time will I need to invest to modernize them?\n*\tWhich applications running my WAS administrative console are ready for Liberty?\n*\tWill it be easy or hard to prepare my applications for Liberty?\n*\tWhich applications should I refactor first?\n*\tWhat resources and time will I need to invest to modernize them?\n\nLiberty Readiness Analysis is a dynamic first step on the application modernization journey, it\n*\tLeverage the traditional WAS Admin Console to scan your applications and report their readiness to move to WebSphere Liberty\n*\tLow-touch way to determine “Easy” or “Hard” work to prepare applications for Liberty\n*\tExposes users to Liberty and Migration Tools in a user interface they already know\n*\tAssist planning and prioritization in moving applications to a Cloud-ready, highly composable, fast to start, dynamic application server runtime, WebSphere Liberty.\n\nLiberty Readiness Analysis enables traditional WAS administrators and developers to analyze their deployed applications from within the administrative console and get a report with the issues, warnings, and best practices for moving them to WebSphere Liberty. \n\n### 1. Business Scenario\n\nThe lab covers the following business scenario:\n\nYour company has multiple Java applications running in WAS environment, you want to evaluate these applications, identify the good candidate applications to be moved to cloud and estimate the migration effort and cost. As the tech lead, you have learned the Liberty Readiness Analysis can help you to quickly conduct this type of evaluations, you are going to use the tool to scan your Java applications on the WAS server and to review the evaluation reports and the move to cloud recommendations. \n\n### 2. Objective\n\nThe objectives of this lab are to:\n*\tLearn about Liberty Readiness Analysis\n*\tLearn about application readiness to move to Liberty\n*\tLearn about Liberty and Migration Tools to be used Application Modernization Journey  \n\n### 3. Prerequisites\nThe following prerequisites must be completed prior to beginning this lab:\n*\tFamiliarity with basic Linux commands\n*\tHave internet access\n*\tHave completed SU0100 of this lab series and have the CP4Apps installed in IBM Red Hat OpenShift Kubernetes Service (OCP) cluster on IBM Cloud.\n\n### 4. What is Already Completed\n\nThe Workstation VM is pre-configured for you to access and work with the OCP cluster in this lab.\n\nThe login credentials for the Workstation VM are provided in your Reservation Details page (https://www.ibm.com/demos/my-reservations/).\n\nThe CLI commands used in this lab are listed in the **Commands.txt** file located at the **/home/ibmdemo/app-mod-labs/am0120** directory of the Workstation VM for you to copy and paste these commands to the Terminal window during this lab.\n\n### 5. Lab Tasks\n\nDuring this lab, you complete the following tasks:\n*\taccess the WebSphere Application Server console\n*\tview the Liberty Readiness Analysis Tool\n*\tconfigure the Liberty Readiness Analysis Tool\n*\trun the scanner against selected applications\n*\treview the evaluation reports\n*\tdelete the evaluation report.\n\n### 6. Execute Lab Tasks\n\n#### 6.1 Log in to the Workstation VM and Get Started \n\n1.\tLaunch the VM from your local workstation web browser with the VM URL.\n \n    ![](images/vm-url.png)\n\n2.\tClick **Connect** to access the VM.\n \n    ![](images/vm-connect.png)\n\n3.\tEnter the password you obtained from the Reservation Details page and click **Send Password**.\n\n    ![](images/vm-password.png)\n\n    The VM desktop is displayed.\n\n    ![](images/vm-desktop.png)\n\n    The Workstation Desktop is displayed. You execute all the lab tasks on this VM.\n\n#### 6.2 Access the WebSphere Application Server console\n\nIn this task, you log in to the Admin Console of WebSphere Application Server version 9.0.0.11.\n\n1.\tStart WebSphere Application Server\n\n    In the Workstation VM, we have a local WebSphere Application Server V9 which hosts several applications. \n    \n    To start the WAS server:\n    \n    a. Open a terminal window by clicking **Applications**>**Terminal**.\n    \n    ![](images/vm-terminal-link.png)\n\n    b. In the terminal window, issue the command below to start the WAS V9 ND server.\n\n    ```\n    /home/ibmdemo/app-mod-labs/shared/startWASV9.sh\n    ```\n    \n    Within a few minutes the WAS ND server is ready.\n\n    c. Access the WAS Admin Console to view the application deployed by clicking **Applications**>**Firefox** to open a browser window.\n\n    ![](images/vm-browser-link.png)\n\n    d. From the web browser window type the WebSphere Integrated Solution Console URL as: **https://localhost:9044/ibm/console** and press **Enter** to launch the WAS console.\n\n    e. In the WAS Admin Console login page, enter the User ID and Password as: **wsadmin**/**passw0rd** and click **Login**. \n\n    f.\tOn the WAS Console page, click **Applications** -> **Application Types** -> **WebSphere enterprise applications** to view the applications deployed.\n \n    ![](images/was-enterprise-apps-link.png)\n\n    The Enterprise Applications list is displayed. You can see all applications deployed to the WAS server. \n\n    ![](images/was-enterprise-apps.png)\n \n#### 6.3\tView the Liberty Readiness Analysis Tool\n\nIn this task, you explore the features of the Liberty Readiness Analysis Tool. The tool can be configured to include and exclude specific packages from its analyses. By default, the tool is configured to exclude Java EE and some third-party packages from its analyses, which you can edit for your particular situation and add custom application class packages to the Include packages field ensures they are part of the evaluation. Additionally, you can select the target version of Java SE that you expect to use as the runtime for WebSphere Liberty. The default is set to IBM Java 8, but options are also available for IBM Java 7, Oracle Java 7 or 8, and OpenJDK11 with Eclipse OpenJ9 or Hotspot. It is important to note here that support for running Liberty with Java SE 7 will end after September 2019. \n\n1. As you can see in the Enterprise Application page, the Liberty Readiness Analysis tool is added to this version of WAS Admin Console.  Click the **Analyze** dropdown menu.\n \n    ![](images/analyze-action.png)\n \n    From dropdown menu, you see the four key operations of this tool.\n \n    ![](images/analyze-action-menu.png)\n\n    These operations are:\n    *\tRun scanner – launches the WAS Migration Binary Scanner to analyze and evaluate the selected enterprise application and to create the evaluation report.\n    *\tConfigure scanner – changes or modifies the WAS Migration Binary Scanner settings to include or exclude java packages to be scanned and set the target Java runtime.\n    *\tDelete report – removes the evaluation report created by the scanner.\n    *\tAbout Liberty – introduces the WebSphere liberty server.\n\n#### 6.4\tConfigure the Liberty Readiness Analysis Tool\n\nIn this task, you are going to learn how to configure the Liberty Readiness Analysis Tool.\n\n1. Click the **Configure scanner** operation from the Analyze dropdown menu.\n\n    ![](images/configure-scanner.png) \n\n    This takes you to the Configure scanner panel.\n \n2. As you can see, in this configure panel, you can you can add or remove java package to be scanned, set up the Target Java runtime, or reset the default configuration values. Click the Target Java dropdown menu to see the list of the target Java runtimes.\n\n    ![](images/configure-scanner-options.png) \n\n3. In this lab, we are going to use the default IBM Java 8 as our target Java runtime, so click the **IBM Java 8** to set it as the target Java and to close the dropdown menu, then click **Back** to go back to the Enterprise Applications panel.\n\n    ![](images/configure-scanner-back.png)\n\n#### 6.5\tRun the scanner against selected applications\n\nIn this task, you scan selected enterprise applications from the list. You submit a scan request to analyze the selected applications for migration readiness to WebSphere Liberty. Upon completion of the scan, a summary of the results is displayed. Applications that are ready to move to Liberty are tagged with a green icon with a checkmark. Applications that might need attention before moving to Liberty are flagged with one or more other icons. When the scanner detects APIs that are not available in Liberty or there are behavioral changes that can break an application, they are labeled severe issues and flagged with a red circular icon with a backslash mark. If the scanner detects APIs or behavioral changes that needs further evaluation because they might break an application, they are labeled warnings and flagged with a yellow triangular icon with an exclamation mark. Deprecated APIs or minor behavioral changes that should not affect most applications are labeled informational and flagged with a blue square icon with a lowercase i.\n\n1. From the enterprise application list, check the box next to the **PlantsByWebSphereV90** application to select it. The application is the famous PlantsByWebSphere application.\n\n    ![](images/checkbox-pbw-app.png)\n\n2.\tSelect the **Run scanner** operation from the **Analyze** dropdown menu.\n \n    ![](images/run-scanner-action.png)\n\n3.\tYou see the message “Scan submitted” in the Liberty Report section.\n\n    ![](images/scan-submitted.png)\n4.\tAfter a few minutes, the report is in ready for review status.  If not, click the Refresh icon.\n\n    ![](images/refresh-report.png)\n \n    The scan evaluation report is ready for review. The green check icon next to the report indicates that the application is a good candidate to be moved to Liberty server.\n 5.\tPerform the same operation on the **query** application. \n\n    a. Check the box next to the **query** application.\n    b. Select the **Run scanner** operation from the **Analyze** dropdown menu.\n    c. Click the **Refresh** icon\n\n    You see the output like this:\n\n    ![](images/query-report.png)\n \n6. In the Liberty Report section, the red backward slash icon next to the **query** application report represents severe issues and the yellow exclamatory icon represents the warnings. It indicates that if you want to migrate the application to Liberty server, you face two severe issues and one warning.\n\n#### 6.6\tReview the evaluation reports \n\nIn this task, you review the evaluation reports you created in the task above and learn more details about the migration assessment.\n\n1.\tLook at the report for the **query** application first.  \n\n    a. Click the **query** application Report link in the Liberty Report section.\n \n    ![](images/query-report-link.png)\n\n    The Application Migration Report is displayed.\n \n    The report consists of three sections, including\n    *\tTechnology Evaluation Summary - indicates which IBM Platforms are a good fit with the technologies used by the application.\n    *\tMigration Rule Severity Summary - shows how many rules were flagged and the number of times each was encountered.\n    *\tApplication Migration Details - is divided into four sections: 1).\tTechnology Evaluation - provides a table of the technologies detected and matching IBM platforms. Technologies that are not supported are linked to analysis rules listed in the Detailed Migration Analysis section. 2).\tDetailed Migration Analysis - where all the flagged rules are listed along with rule specific help information. It even identifies the file names and line numbers where the rule infractions were detected. 3).\tInventory - provides a high-level view of the content and structure of the application. 4). Liberty Feature List - contains a list of all the required features for the application in the Liberty server.xml configuration file.\n\n    b.\tView the Technology Evaluation Summary.\n\n    The Technology Evaluation Summary shows which editions of WebSphere Application Server are best suited to run the selected application. it provides a list of Java EE programming models that are used by the application, and it indicates on which platforms the application can be supported.\n \n    ![](images/tech-evaluation-summary.png)\n\n    As you can see from the summary table, the query application is not supported by Liberty for Java on IBM Cloud and Liberty Core platforms.\n\n    c.\tClick the vertical scroll bar on the right to go to the Migration Rule Severity Summary section and review it.\n\n    The Migration Rule Severity Summary lists all issues, their severity levels, migration rules used and their descriptions. \n \n    ![](images/rule-severity-summary.png)\n\n    In the summary report, two severe level issues and one warning level issue are identified.  Their detail analysis report can be found in the Detailed Migration Analysis section of the report. Jump links are available in the LABEL column for accessing the detailed info.\n\n    d. The Application Migration Details section which contains four sub sections: Technology Evaluation, Detailed Migration Analysis, Inventory and Liberty Feature List.  Click Expand all to expand all sub sections.\n \n    ![](images/app-migration-details.png)\n\n    e. Review the Technology Evaluation section.\n\n    The section lists all the Java programming models that the application uses and whether those models are supported by a specific WebSphere platform. This information is used to determine whether a WebSphere product is suitable for the application to migrate to.\n \n    ![](images/app-migration-details-2.png)\n\n    \n    The scanner identifies that the query application uses EJB, which is not supported on Liberty Core platform.  The application also uses Remote EJBs, which are not supported on both Liberty for Java on IBM Cloud and Liberty Core platforms. \n\n    f. Scroll to the Detailed Migration Analysis section and review it\n\n    This section shows all the issues that were found at the code level in a specific class file and specific line. You can see the Java technology issues that were identified based on different migration rules. \n \n    ![](images/detail-migration-analysis.png)\n    \n    As shown in the report, three migration rules are flagged, and four results are identified regarding to the Remote EJB and the EJB Query API as well as the EJB blinding locations. This information helps developers to pinpoint where the issue is. The report also provides Rule Help to assist developers to work around the issue.\n\n    g. Scroll down to review the severe rule number 2.\n \n    ![](images/rule-help.png)\n\n    h.\tScroll down to review the Additional Rule Help section.\n \n    ![](images/additional-rule-help.png)\n\n    i.\tScroll down to the Rule Analyzed section and review it.\n \n    ![](images/rules-analyzed.png)\n\n    This section lists all migration rules used to analyze the app.\n\n    j. Scroll down to the Inventory section and review it.\n\n    ![](images/inventory-report.png)\n\n    This section shows the contents of the application, such as how many WAR, RAR, servlets, JSPs, EJBs, and utility JAR files it uses, and what their relationships are. It also lists any potential deployment problems as well as suggested solutions. This information is useful to estimate the effort that is required for your migration project.\n\n    k.\tScroll down to review the potential deployment problems and their detail descriptions.\n \n    ![](images/potential-deployment-problems.png)\n\n    l.\tScroll down to review the Contained Archives.\n\n    ![](images/contained-archives.png)\n \n    This section list different java technologies contained in the application archive package.\n\n    m.\tScroll down to the end of the report to review the Liberty Feature List.\n    \n    ![](images/liberty-feature-list.png)\n    \n    The Liberty Feature List contains the application required Liberty features which should be included in the Liberty server.xml configuration file.\n \n    After reviewing the query application analysis report, we know that significant development effort is required if we want to move this application to Liberty server, therefore it is not a good migration candidate. \n\n    m.\t Scroll up and click Back to close the report.\n \n    ![](images/report-back.png)\n\n2.\tNow you look at the report for the **PlantsByWebSphere** application.  \n    a. Click the PlantsByWebSphereV90 application Report link.\n\n   ![](images/pbw-report-link.png) \n\n    The Application Migration Report is displayed.\n\n    The evaluation report shows the application is supported on all available IBM WebSphere platforms. \n\n    b. Click **Jump To Section** -> **Technology Evaluation** to go to the Application Migration Details/Technology Evaluation section.\n \n    ![](images/jump-to-section.png)\n\n    The section lists three Java programming models that the application uses, and all those models are supported by the IBM WebSphere platforms. This means the application is suitable for migrating to Liberty.\n \n    c. Scroll down to review the other sections and you see that there is no issues and problems identified, which indicating that the application is a good candidate to be moved to Liberty.\n\n    ![](images/app-migration-details-2.png)\n    \n    d. Scroll down to the bottom of the page to review the Liberty Feature List.  The scanner has determined that four Liberty features are used to support the application runtime, including cdi-1.0, jsf-2.0, jsp-2.2 and servlet-3.0.\n \n    ![](images/liberty-feature-list-2.png)\n\n3. Scroll up to the top of the report and click **Back**.\n\n#### 6.7\tDelete the evaluation report \n\nThe evaluation reports created by the tool can be deleted by selecting one or more applications from the enterprise applications collection. Additionally, when applications are uninstalled or redeployed, the migration reports for those application automatically get deleted. This is done to avoid there being a mismatch between the information contained in a migration report and the version of the application that is available in the admin console. \n\n1.\tCheck the box next to the **PlantsByWebSphere** application to select it.\n\n    ![](images/checkbox-pbw.png)\n\n2.\tCheck the box next to the query application to select it.\n3.\tClick the **Analyze** dropdown menu and select **Delete report** operation.\n \n    The analysis reports are deleted.\n\n    ![](images/report-deleted.png)\n \n#### 6.8 Learn more about Liberty\n\nYou can use the **About Liberty** operation to get more detail information about Liberty server.\n\n1.\tClick the **Analyze** dropdown menu and select **About Liberty** operation.\n  \n    ![](images/about-liberty-action.png)\n\n    This takes you to the About Liberty page.\n\n    ![](images/about-liberty-page.png)\n \n### 7. Summary\n\nIn this lab, you have learned the Liberty Readiness Analysis, a new add-on feature to WAS version 9.0.0.11 and how to use it to evaluate existing WebSphere workloads for moving to cloud right inside the WAS Admin Console.\n\nFor applications that have a green checkmark and are ready for Liberty, go ahead and try running them on either [Open Liberty[(http://openliberty.io/) or [WebSphere Liberty](http://wasdev.net/). Alternatively, you can use [Transformation Advisor](http://ibm.biz/CloudTA) to start planning the migration of the applications to WebSphere Liberty, moving them into containers, and even deploying to either IBM Cloud or OpenShift. Transformation Advisor helps by generating some of the necessary artifacts such as Liberty server.xml file with a features list and some migrated configuration information, Docker files for containerization, as well as OpenShift operator and deployment YAML for Kubernetes deployment.\n\nFor applications that need to be updated before moving to Liberty and you have the source code available, add the [WebSphere Application Server Migration Toolkit](http://ibm.biz/WAMT4Eclipse) to your Eclipse development environment. This toolkit analyzes application source code and generates the same report as Liberty Readiness Analysis but from within your Eclipse IDE so that changes can be made quickly and easily. WebSphere Liberty can be run directly from within the Eclipse IDE too, making it all that much easier to verify that your application runs as expected.\n\nAs a part of IBM application Modernization solutions in IBM Cloud Pak for Applications, Liberty Readiness Analysis enables traditional WAS administrators and developers to analyze their deployed applications from within the administrative console and get a report with the issues, warnings, and best practices for moving them to WebSphere Liberty. To learn more about IBM application Modernization solutions, please visit [Cloud Pak for Applications](https://www.ibm.com/cloud/cloud-pak-for-applications).\n\nCongratulations! You have successfully completed the lab “Liberty Readiness Analysis Introduction”.\n\n","type":"Mdx","contentDigest":"69d40b41c628fad2ec2c84458c2176de","owner":"gatsby-plugin-mdx","counter":2892},"frontmatter":{"title":"Liberty Readiness Analysis Introduction","description":null},"exports":{},"rawBody":"---\ntitle: Liberty Readiness Analysis Introduction\ndescription: \n---\n\nIn this Lab, you walk through the process using the Liberty Readiness Analysis to evaluate the existing WebSphere applications. \n\nThe Liberty Readiness Analysis tool is included in the Cloud Pak for Applications (CP4Apps), it is an integrated tool in the Admin Console of the WebSphere Application Server (WAS) version 9.0.0.11 and above. This tool simplifies the process to evaluate your existing WebSphere applications for moving to WebSphere Liberty in your application modernization journey.\n\nLiberty Readiness Analysis assess the readiness of your enterprise applications for WebSphere Liberty. It answers the following common questions about the Application Modernization Journey:\n*\tHow ready are the applications in my admin console for running in Liberty?\n*\tWhich applications can I move now and which will need to be refactored?\n*\tWill it be easy or problematic to prepare my applications for Liberty?\n*\tWhat resources and time will I need to invest to modernize them?\n*\tWhich applications running my WAS administrative console are ready for Liberty?\n*\tWill it be easy or hard to prepare my applications for Liberty?\n*\tWhich applications should I refactor first?\n*\tWhat resources and time will I need to invest to modernize them?\n\nLiberty Readiness Analysis is a dynamic first step on the application modernization journey, it\n*\tLeverage the traditional WAS Admin Console to scan your applications and report their readiness to move to WebSphere Liberty\n*\tLow-touch way to determine “Easy” or “Hard” work to prepare applications for Liberty\n*\tExposes users to Liberty and Migration Tools in a user interface they already know\n*\tAssist planning and prioritization in moving applications to a Cloud-ready, highly composable, fast to start, dynamic application server runtime, WebSphere Liberty.\n\nLiberty Readiness Analysis enables traditional WAS administrators and developers to analyze their deployed applications from within the administrative console and get a report with the issues, warnings, and best practices for moving them to WebSphere Liberty. \n\n### 1. Business Scenario\n\nThe lab covers the following business scenario:\n\nYour company has multiple Java applications running in WAS environment, you want to evaluate these applications, identify the good candidate applications to be moved to cloud and estimate the migration effort and cost. As the tech lead, you have learned the Liberty Readiness Analysis can help you to quickly conduct this type of evaluations, you are going to use the tool to scan your Java applications on the WAS server and to review the evaluation reports and the move to cloud recommendations. \n\n### 2. Objective\n\nThe objectives of this lab are to:\n*\tLearn about Liberty Readiness Analysis\n*\tLearn about application readiness to move to Liberty\n*\tLearn about Liberty and Migration Tools to be used Application Modernization Journey  \n\n### 3. Prerequisites\nThe following prerequisites must be completed prior to beginning this lab:\n*\tFamiliarity with basic Linux commands\n*\tHave internet access\n*\tHave completed SU0100 of this lab series and have the CP4Apps installed in IBM Red Hat OpenShift Kubernetes Service (OCP) cluster on IBM Cloud.\n\n### 4. What is Already Completed\n\nThe Workstation VM is pre-configured for you to access and work with the OCP cluster in this lab.\n\nThe login credentials for the Workstation VM are provided in your Reservation Details page (https://www.ibm.com/demos/my-reservations/).\n\nThe CLI commands used in this lab are listed in the **Commands.txt** file located at the **/home/ibmdemo/app-mod-labs/am0120** directory of the Workstation VM for you to copy and paste these commands to the Terminal window during this lab.\n\n### 5. Lab Tasks\n\nDuring this lab, you complete the following tasks:\n*\taccess the WebSphere Application Server console\n*\tview the Liberty Readiness Analysis Tool\n*\tconfigure the Liberty Readiness Analysis Tool\n*\trun the scanner against selected applications\n*\treview the evaluation reports\n*\tdelete the evaluation report.\n\n### 6. Execute Lab Tasks\n\n#### 6.1 Log in to the Workstation VM and Get Started \n\n1.\tLaunch the VM from your local workstation web browser with the VM URL.\n \n    ![](images/vm-url.png)\n\n2.\tClick **Connect** to access the VM.\n \n    ![](images/vm-connect.png)\n\n3.\tEnter the password you obtained from the Reservation Details page and click **Send Password**.\n\n    ![](images/vm-password.png)\n\n    The VM desktop is displayed.\n\n    ![](images/vm-desktop.png)\n\n    The Workstation Desktop is displayed. You execute all the lab tasks on this VM.\n\n#### 6.2 Access the WebSphere Application Server console\n\nIn this task, you log in to the Admin Console of WebSphere Application Server version 9.0.0.11.\n\n1.\tStart WebSphere Application Server\n\n    In the Workstation VM, we have a local WebSphere Application Server V9 which hosts several applications. \n    \n    To start the WAS server:\n    \n    a. Open a terminal window by clicking **Applications**>**Terminal**.\n    \n    ![](images/vm-terminal-link.png)\n\n    b. In the terminal window, issue the command below to start the WAS V9 ND server.\n\n    ```\n    /home/ibmdemo/app-mod-labs/shared/startWASV9.sh\n    ```\n    \n    Within a few minutes the WAS ND server is ready.\n\n    c. Access the WAS Admin Console to view the application deployed by clicking **Applications**>**Firefox** to open a browser window.\n\n    ![](images/vm-browser-link.png)\n\n    d. From the web browser window type the WebSphere Integrated Solution Console URL as: **https://localhost:9044/ibm/console** and press **Enter** to launch the WAS console.\n\n    e. In the WAS Admin Console login page, enter the User ID and Password as: **wsadmin**/**passw0rd** and click **Login**. \n\n    f.\tOn the WAS Console page, click **Applications** -> **Application Types** -> **WebSphere enterprise applications** to view the applications deployed.\n \n    ![](images/was-enterprise-apps-link.png)\n\n    The Enterprise Applications list is displayed. You can see all applications deployed to the WAS server. \n\n    ![](images/was-enterprise-apps.png)\n \n#### 6.3\tView the Liberty Readiness Analysis Tool\n\nIn this task, you explore the features of the Liberty Readiness Analysis Tool. The tool can be configured to include and exclude specific packages from its analyses. By default, the tool is configured to exclude Java EE and some third-party packages from its analyses, which you can edit for your particular situation and add custom application class packages to the Include packages field ensures they are part of the evaluation. Additionally, you can select the target version of Java SE that you expect to use as the runtime for WebSphere Liberty. The default is set to IBM Java 8, but options are also available for IBM Java 7, Oracle Java 7 or 8, and OpenJDK11 with Eclipse OpenJ9 or Hotspot. It is important to note here that support for running Liberty with Java SE 7 will end after September 2019. \n\n1. As you can see in the Enterprise Application page, the Liberty Readiness Analysis tool is added to this version of WAS Admin Console.  Click the **Analyze** dropdown menu.\n \n    ![](images/analyze-action.png)\n \n    From dropdown menu, you see the four key operations of this tool.\n \n    ![](images/analyze-action-menu.png)\n\n    These operations are:\n    *\tRun scanner – launches the WAS Migration Binary Scanner to analyze and evaluate the selected enterprise application and to create the evaluation report.\n    *\tConfigure scanner – changes or modifies the WAS Migration Binary Scanner settings to include or exclude java packages to be scanned and set the target Java runtime.\n    *\tDelete report – removes the evaluation report created by the scanner.\n    *\tAbout Liberty – introduces the WebSphere liberty server.\n\n#### 6.4\tConfigure the Liberty Readiness Analysis Tool\n\nIn this task, you are going to learn how to configure the Liberty Readiness Analysis Tool.\n\n1. Click the **Configure scanner** operation from the Analyze dropdown menu.\n\n    ![](images/configure-scanner.png) \n\n    This takes you to the Configure scanner panel.\n \n2. As you can see, in this configure panel, you can you can add or remove java package to be scanned, set up the Target Java runtime, or reset the default configuration values. Click the Target Java dropdown menu to see the list of the target Java runtimes.\n\n    ![](images/configure-scanner-options.png) \n\n3. In this lab, we are going to use the default IBM Java 8 as our target Java runtime, so click the **IBM Java 8** to set it as the target Java and to close the dropdown menu, then click **Back** to go back to the Enterprise Applications panel.\n\n    ![](images/configure-scanner-back.png)\n\n#### 6.5\tRun the scanner against selected applications\n\nIn this task, you scan selected enterprise applications from the list. You submit a scan request to analyze the selected applications for migration readiness to WebSphere Liberty. Upon completion of the scan, a summary of the results is displayed. Applications that are ready to move to Liberty are tagged with a green icon with a checkmark. Applications that might need attention before moving to Liberty are flagged with one or more other icons. When the scanner detects APIs that are not available in Liberty or there are behavioral changes that can break an application, they are labeled severe issues and flagged with a red circular icon with a backslash mark. If the scanner detects APIs or behavioral changes that needs further evaluation because they might break an application, they are labeled warnings and flagged with a yellow triangular icon with an exclamation mark. Deprecated APIs or minor behavioral changes that should not affect most applications are labeled informational and flagged with a blue square icon with a lowercase i.\n\n1. From the enterprise application list, check the box next to the **PlantsByWebSphereV90** application to select it. The application is the famous PlantsByWebSphere application.\n\n    ![](images/checkbox-pbw-app.png)\n\n2.\tSelect the **Run scanner** operation from the **Analyze** dropdown menu.\n \n    ![](images/run-scanner-action.png)\n\n3.\tYou see the message “Scan submitted” in the Liberty Report section.\n\n    ![](images/scan-submitted.png)\n4.\tAfter a few minutes, the report is in ready for review status.  If not, click the Refresh icon.\n\n    ![](images/refresh-report.png)\n \n    The scan evaluation report is ready for review. The green check icon next to the report indicates that the application is a good candidate to be moved to Liberty server.\n 5.\tPerform the same operation on the **query** application. \n\n    a. Check the box next to the **query** application.\n    b. Select the **Run scanner** operation from the **Analyze** dropdown menu.\n    c. Click the **Refresh** icon\n\n    You see the output like this:\n\n    ![](images/query-report.png)\n \n6. In the Liberty Report section, the red backward slash icon next to the **query** application report represents severe issues and the yellow exclamatory icon represents the warnings. It indicates that if you want to migrate the application to Liberty server, you face two severe issues and one warning.\n\n#### 6.6\tReview the evaluation reports \n\nIn this task, you review the evaluation reports you created in the task above and learn more details about the migration assessment.\n\n1.\tLook at the report for the **query** application first.  \n\n    a. Click the **query** application Report link in the Liberty Report section.\n \n    ![](images/query-report-link.png)\n\n    The Application Migration Report is displayed.\n \n    The report consists of three sections, including\n    *\tTechnology Evaluation Summary - indicates which IBM Platforms are a good fit with the technologies used by the application.\n    *\tMigration Rule Severity Summary - shows how many rules were flagged and the number of times each was encountered.\n    *\tApplication Migration Details - is divided into four sections: 1).\tTechnology Evaluation - provides a table of the technologies detected and matching IBM platforms. Technologies that are not supported are linked to analysis rules listed in the Detailed Migration Analysis section. 2).\tDetailed Migration Analysis - where all the flagged rules are listed along with rule specific help information. It even identifies the file names and line numbers where the rule infractions were detected. 3).\tInventory - provides a high-level view of the content and structure of the application. 4). Liberty Feature List - contains a list of all the required features for the application in the Liberty server.xml configuration file.\n\n    b.\tView the Technology Evaluation Summary.\n\n    The Technology Evaluation Summary shows which editions of WebSphere Application Server are best suited to run the selected application. it provides a list of Java EE programming models that are used by the application, and it indicates on which platforms the application can be supported.\n \n    ![](images/tech-evaluation-summary.png)\n\n    As you can see from the summary table, the query application is not supported by Liberty for Java on IBM Cloud and Liberty Core platforms.\n\n    c.\tClick the vertical scroll bar on the right to go to the Migration Rule Severity Summary section and review it.\n\n    The Migration Rule Severity Summary lists all issues, their severity levels, migration rules used and their descriptions. \n \n    ![](images/rule-severity-summary.png)\n\n    In the summary report, two severe level issues and one warning level issue are identified.  Their detail analysis report can be found in the Detailed Migration Analysis section of the report. Jump links are available in the LABEL column for accessing the detailed info.\n\n    d. The Application Migration Details section which contains four sub sections: Technology Evaluation, Detailed Migration Analysis, Inventory and Liberty Feature List.  Click Expand all to expand all sub sections.\n \n    ![](images/app-migration-details.png)\n\n    e. Review the Technology Evaluation section.\n\n    The section lists all the Java programming models that the application uses and whether those models are supported by a specific WebSphere platform. This information is used to determine whether a WebSphere product is suitable for the application to migrate to.\n \n    ![](images/app-migration-details-2.png)\n\n    \n    The scanner identifies that the query application uses EJB, which is not supported on Liberty Core platform.  The application also uses Remote EJBs, which are not supported on both Liberty for Java on IBM Cloud and Liberty Core platforms. \n\n    f. Scroll to the Detailed Migration Analysis section and review it\n\n    This section shows all the issues that were found at the code level in a specific class file and specific line. You can see the Java technology issues that were identified based on different migration rules. \n \n    ![](images/detail-migration-analysis.png)\n    \n    As shown in the report, three migration rules are flagged, and four results are identified regarding to the Remote EJB and the EJB Query API as well as the EJB blinding locations. This information helps developers to pinpoint where the issue is. The report also provides Rule Help to assist developers to work around the issue.\n\n    g. Scroll down to review the severe rule number 2.\n \n    ![](images/rule-help.png)\n\n    h.\tScroll down to review the Additional Rule Help section.\n \n    ![](images/additional-rule-help.png)\n\n    i.\tScroll down to the Rule Analyzed section and review it.\n \n    ![](images/rules-analyzed.png)\n\n    This section lists all migration rules used to analyze the app.\n\n    j. Scroll down to the Inventory section and review it.\n\n    ![](images/inventory-report.png)\n\n    This section shows the contents of the application, such as how many WAR, RAR, servlets, JSPs, EJBs, and utility JAR files it uses, and what their relationships are. It also lists any potential deployment problems as well as suggested solutions. This information is useful to estimate the effort that is required for your migration project.\n\n    k.\tScroll down to review the potential deployment problems and their detail descriptions.\n \n    ![](images/potential-deployment-problems.png)\n\n    l.\tScroll down to review the Contained Archives.\n\n    ![](images/contained-archives.png)\n \n    This section list different java technologies contained in the application archive package.\n\n    m.\tScroll down to the end of the report to review the Liberty Feature List.\n    \n    ![](images/liberty-feature-list.png)\n    \n    The Liberty Feature List contains the application required Liberty features which should be included in the Liberty server.xml configuration file.\n \n    After reviewing the query application analysis report, we know that significant development effort is required if we want to move this application to Liberty server, therefore it is not a good migration candidate. \n\n    m.\t Scroll up and click Back to close the report.\n \n    ![](images/report-back.png)\n\n2.\tNow you look at the report for the **PlantsByWebSphere** application.  \n    a. Click the PlantsByWebSphereV90 application Report link.\n\n   ![](images/pbw-report-link.png) \n\n    The Application Migration Report is displayed.\n\n    The evaluation report shows the application is supported on all available IBM WebSphere platforms. \n\n    b. Click **Jump To Section** -> **Technology Evaluation** to go to the Application Migration Details/Technology Evaluation section.\n \n    ![](images/jump-to-section.png)\n\n    The section lists three Java programming models that the application uses, and all those models are supported by the IBM WebSphere platforms. This means the application is suitable for migrating to Liberty.\n \n    c. Scroll down to review the other sections and you see that there is no issues and problems identified, which indicating that the application is a good candidate to be moved to Liberty.\n\n    ![](images/app-migration-details-2.png)\n    \n    d. Scroll down to the bottom of the page to review the Liberty Feature List.  The scanner has determined that four Liberty features are used to support the application runtime, including cdi-1.0, jsf-2.0, jsp-2.2 and servlet-3.0.\n \n    ![](images/liberty-feature-list-2.png)\n\n3. Scroll up to the top of the report and click **Back**.\n\n#### 6.7\tDelete the evaluation report \n\nThe evaluation reports created by the tool can be deleted by selecting one or more applications from the enterprise applications collection. Additionally, when applications are uninstalled or redeployed, the migration reports for those application automatically get deleted. This is done to avoid there being a mismatch between the information contained in a migration report and the version of the application that is available in the admin console. \n\n1.\tCheck the box next to the **PlantsByWebSphere** application to select it.\n\n    ![](images/checkbox-pbw.png)\n\n2.\tCheck the box next to the query application to select it.\n3.\tClick the **Analyze** dropdown menu and select **Delete report** operation.\n \n    The analysis reports are deleted.\n\n    ![](images/report-deleted.png)\n \n#### 6.8 Learn more about Liberty\n\nYou can use the **About Liberty** operation to get more detail information about Liberty server.\n\n1.\tClick the **Analyze** dropdown menu and select **About Liberty** operation.\n  \n    ![](images/about-liberty-action.png)\n\n    This takes you to the About Liberty page.\n\n    ![](images/about-liberty-page.png)\n \n### 7. Summary\n\nIn this lab, you have learned the Liberty Readiness Analysis, a new add-on feature to WAS version 9.0.0.11 and how to use it to evaluate existing WebSphere workloads for moving to cloud right inside the WAS Admin Console.\n\nFor applications that have a green checkmark and are ready for Liberty, go ahead and try running them on either [Open Liberty[(http://openliberty.io/) or [WebSphere Liberty](http://wasdev.net/). Alternatively, you can use [Transformation Advisor](http://ibm.biz/CloudTA) to start planning the migration of the applications to WebSphere Liberty, moving them into containers, and even deploying to either IBM Cloud or OpenShift. Transformation Advisor helps by generating some of the necessary artifacts such as Liberty server.xml file with a features list and some migrated configuration information, Docker files for containerization, as well as OpenShift operator and deployment YAML for Kubernetes deployment.\n\nFor applications that need to be updated before moving to Liberty and you have the source code available, add the [WebSphere Application Server Migration Toolkit](http://ibm.biz/WAMT4Eclipse) to your Eclipse development environment. This toolkit analyzes application source code and generates the same report as Liberty Readiness Analysis but from within your Eclipse IDE so that changes can be made quickly and easily. WebSphere Liberty can be run directly from within the Eclipse IDE too, making it all that much easier to verify that your application runs as expected.\n\nAs a part of IBM application Modernization solutions in IBM Cloud Pak for Applications, Liberty Readiness Analysis enables traditional WAS administrators and developers to analyze their deployed applications from within the administrative console and get a report with the issues, warnings, and best practices for moving them to WebSphere Liberty. To learn more about IBM application Modernization solutions, please visit [Cloud Pak for Applications](https://www.ibm.com/cloud/cloud-pak-for-applications).\n\nCongratulations! You have successfully completed the lab “Liberty Readiness Analysis Introduction”.\n\n","fileAbsolutePath":"/Users/yitang/Downloads/app-mod/src/pages/labs/appmod-labs/am0120-evaluation/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}
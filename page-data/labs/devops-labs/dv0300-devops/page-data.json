{"componentChunkName":"component---src-pages-labs-devops-labs-dv-0300-devops-index-mdx","path":"/labs/devops-labs/dv0300-devops/","result":{"pageContext":{"frontmatter":{"title":"Modernize a Java Application using IBM TA and CP4Apps Pipeline","description":null},"relativePagePath":"/labs/devops-labs/dv0300-devops/index.mdx","titleType":"page","MdxNode":{"id":"06d3f70c-2b33-5e72-9df0-f092577c0491","children":[],"parent":"0d275264-afc8-560f-b570-8df76db230f6","internal":{"content":"---\ntitle: Modernize a Java Application using IBM TA and CP4Apps Pipeline\ndescription: \n---\n\nIBM Cloud Transformation Advisor, also called **Transformation Advisor** (**TA**), bridges the gap between existing development activities and cloud-native development together.  TA will accelerate the development process by creating the configuration and deployment artifacts for an application, then facilitate the developer’s use of the enhanced developer productivity tools in IBM Cloud paks.  \n\nTransformation Advisor will simplify the modernization scenario, creating one development experience for both cloud-native and application modernization. This lowers the on-ramp to cloud development, test, deployment for Java EE developers.\n\n### 1.\tBusiness Scenario\n\nAs shown in the image below, your company has a web application called Mod Resorts, a WebSphere application showing the weather in various locations. Your company wants to move this application from on-premises to the cloud.\n \n![](images/mod-resorts-app-home-page.png)\n\nAs a tech lead, you have already analyzed the application using the Transformation Advisor tool. \n\nBased on the analysis you know that you can move this application from the traditional WebSphere Server environment to a light-weighted Liberty server environment without any code change.  \n\nNow you are planning to use the Transformation Advisor migration plan to create the migration bundle, to containerize the application, and to deploy the Docker container to an OpenShift Kubernetes cluster environment.\n \n### 2.\tObjective\n\nThe objective of this lab is to learn how to use Transformation Advisor to accelerate the development activities required during the modernization of a Java EE application currently deployed to IBM WebSphere Application Server, Oracle WebLogic, Apache Tomcat or Red Hat JBoss Application Server.  The application will be deployed through a continuous integration and continuous delivery (CI/CD) pipeline to the Open Liberty server in the OpenShift Container Platform (OCP) cluster.\n\nThe sample application used in this lab does not require any modification to the source code in its modernization.  This enables the completion of the lab in a pre-determined amount of time.  The modernization of applications that need modifications will be described, but not required for completion of the lab.\n\n### 3.\tPrerequisites\nThe following prerequisites must be completed prior to beginning this lab:\n*\tFamiliarity with basic Linux commands\n*\tHave internet access\n*\tHave completed Lab SU0100 of this lab series and have the CP4Apps installed in IBM Red Hat OpenShift Kubernetes Service (OCP) cluster on IBM Cloud.\n*\tBasic Java app development knowledge\n*\tGitHub account - you can sign up for a free account at: https://github.com\n\n### 4.\tWhat is Already Completed\n\nThe Workstation VM is pre-configured for you to access and work with the OCP cluster in this lab.\n\nThe login credentials for the Workstation VM are provided in your Reservation Details page (**https://www.ibm.com/demos/my-reservations/**).\n\nThe CLI commands used in this lab are listed in the Commands.txt file located at the **/home/ibmdemo/app-mod-labs/dv0200** directory of the Workstation VM for you to copy and paste these commands to the Terminal window during the lab.\n\n### 5.\tLab Tasks\nDuring this lab, you will complete the following tasks:\n*\tLogin to the Workstation VM and open Transformation Advisor\n*\tView the Transformation Advisor insights for a collection of applications and queue managers\n*\tLoad a data collection for the Mod Resorts application currently deployed on-premise in WebSphere Application Server v9\n*\tView the migration bundle contents for the Mod Resorts application\n*\tPush the migration bundle into GitHub \n*\tClone the GitHub repository on the local workstation and import the source for the application\n*\tBuild and package the application in a Liberty container in Codewind using Application Stacks\n*\tCommit and push the application to the GitHub repository\n*\tSetu the Tekton Pipeline webhook for the application’s build and deployment\n*\tDeploy the application to OpenShift via the Tekton pipeline\n\n\n### 6.\tExecute Lab Tasks\n#### 6.1 Log in to the Workstation VM and get started (skip this step if you are using your own workstation)\n1.  Launch the VM from your local workstation web browser with the VM URL.\n \n    ![](images/vm-url.png)\n\n2.\tClick **Connect** to access the VM.\n \n    ![](images/vm-connect.png)\n\n3.\tEnter the password you obtained from the Reservation Details page and click **Send Password**.\n\n    ![](images/vm-password.png)\n\n    The VM desktop is displayed.\n\n    ![](images/vm-desktop.png)\n\n    The Workstation Desktop is displayed. You execute all the lab tasks on this VM.\n \n#### 6.2\tLaunch Transformation Advisor \nIn this lab, you are going to use Transformation Advisor’s capabilities designed to accelerate the development process by creating the configuration and deployment artifacts for an application.\nUsing these artifacts, and Accelerators for Teams, you will learn how to facilitate the use of the enhanced developer productivity tools in IBM Cloud Pak for Applications as the application is deployed to RedHat OpenShift, using the Tekton pipelines.  \n\nThe Transformation Advisor used in the lab is installed as part of IBM Cloud Pak for Applications version 4.1. IBM Transformation Advisor is also available stand-alone (Beta), run locally in Docker on your workstation. Learn more about the stand-alone version of Transformation Advisor: http://ibm.biz/cloudta\n\nThe Transformation Advisor is installed on OCP in IBM Cloud.  In this lab, you use the following steps to access it.\n\nThis task requires to have IBM Cloud Pak for Applications installed on OCP cluster in IBM Cloud. If you have completed the lab0 of this lab series, you can continue, otherwise you need to complete lab0 first.\n\n1. From web browser window, click the IBM Cloud Transformation Advisor bookmark and log in to your IBM Cloud account with your credentials.\n \t\n    ![](images/ta-bookmarked.png) \n\n    The Transformation Advisor home page is displayed.\n\n    ![](images/ta-home-page.png)\n \n#### 6.4\tUpload Application Data into Transformation Advisor\n\nThe Transformation Advisor can evaluate any Java based applications and help to package the good candidate application to move to cloud. In Lab AM0100 of this lab series, you have demonstrated how to use the tool to evaluate the on-premises WebSphere application, Mod Resorts, and have determined that it is suitable to move this application to cloud without any code change. Now you need to move forward to create the application migration bundle with the Transformation Advisor. \n\n1. In the Transformation Advisor page, you first create a new workspace by entering the workspace name as **Evaluation** and then clicking **Next**.\n \n   ![](images/ta-new-workspace.png)\n\n    Note: A workspace is a designated area that houses the migration recommendations provided by Transformation Advisor against your application server environment. You can name and organize these however you want, whether it’s by business application, location or teams. \n\n2. Enter the collection name as **ModResorts** and click **Let’s go**.\n \n    ![](images/ta-new-collection.png)\n\n    Note: Each workspace can be divided into collections for more focused assessment and planning. Like workspaces, collections can be named and organized in whatever way you want.\n\n3. Once the Workspace and Collection are created, you get the data collection options page.  You can either download the Data Collector utility and run it against your application server, or upload an existing data file. In this lab, you are going to use the upload option. Click **Upload data** to go to the upload page.\n\n    ![](images/ta-upload-data.png) \n\n4. Click Drop or Add File.\n\n  ![](images/drop-or-add-file.png)\n \n5. Navigate to **/home/ibmdemo/app-mod-labs/dv0200/DataCollections** directory, select **NewDeafaultAppSrv03.zip** file and click **Open**.\n\n  ![](images/ta-new-default-app-zip.png) \n\n6. Click **Upload**.\n\n    ![](images/ta-new-data-upload.png)\n\n    Transformation Advisor will show its recommendations page with details about modernizing the application to Liberty in IBM Cloud Pak for Applications.\n\n    Note: The modresorts-1.0.war application used in this lab does not require any modification to the source code in its modernization.  This enables the completion of the lab in a pre-determined amount of time.  The modernization of applications that need modifications will be described, but not required for completion of the lab. \n\n    ![](images/ta-recommendation-modresorts-app.png)\n    \n    The Transformation Advisor provides all migration recommendations for all applications deployed to the WAS server based on the specified source and target environments. \n    \n    On the Recommendations page, the identified migration source environment is shown in the Profile section, and the target environment is shown in the Preferred migration section. The data collector tool detects that the source environment is your WebSphere Application Server ND **NewDefaultAppSrv03** Profile. The target environment is Liberty on OpenShift, which is the default target environment.\n\n    The Recommendations page also shows the summary analysis results for all the appllications in the **NewDefaultAppSrv03** environment to be moved to a Liberty on OpenShift environment. \n    \n    For each app, you can see these results:\n    *   Complexity level\n    *   Technology match\n    *   Dependencies\n    *   Issues\n    *   Estimated development cost in days\n\n    For example, if you want to move the modresorts-1_0_war application to Liberty on Private Cloud, the complexity level is Simple and the Tech match is 100 percent. \n\n    A Simple complexity score indicates that the application code does not need to be changed before it can be moved to cloud. The application has no dependency, has 1 minor level issue and the estimated development effort is 0 day.\n\n    ![](images/ta-modresorts-simple.png)\n\n#### 6.4\tView the Migration Bundle\n\nIn this section, you view the migration bundle contents for the Mod Resorts application.  The migration bundle is created by the Transformation Advisor for a quick deployment to cloud while minimizing the migration error.\n\n1.\tClick on the menu with the “hamburger icon” next to the **Mod Resorts** application analysis to display the menu choices and choose **View migration plan**.\n\n    ![](images/ta-view-migration-plan.png)\n    \n    Transformation Advisor will display details about the migration bundle that it generated to accelerate the modernization of this application into Liberty on OpenShift. The migration bundle includes diverse artifacts, depending on the needs of the application.\n\n    The user can choose to create a migration bundle for either of the options below: \n    *\ta binary project of an application (uploading a WAR/EAR file and its dependent libraries), or \n    *\ta source project of an application, so that the application source files can be modernized and maintained.  \n\n    The user can also choose to create a migration bundle that will either:\n    *\tallow the project to integrate with the Accelerator for Teams, making the modernization developer experience align with the developer experience for cloud-native applications\n    *\tdeploy into Red Hat OpenShift cluster via an Operator\n\n    The default selection is for a source project that will integrate with the Accelerator for Teams (derived from the open source project Kabanero.io).\n\n2.\tView the migration bundle settings and functions.\n\n    The artifacts change, depending on the user’s modernization choices for the application.  The default selection for an application that uses only EE7 features and above will be to deploy as a source application project, and to use the Accelerator for Teams.  The project will be a source project, with the directory structure set up with a starter application and the Liberty configuration for the application.  \n\n    To accelerate the application modernization, the artifacts produced by Transformation Advisor include the configuration for the Liberty server, the build file for the application and the Accelerator for Teams configuration files (which can used with the Application Stacks).\n\n    Users are able to choose to download the artifacts as a migration bundle or push the bundle contents into a GitHub repository.\n\n    ![](images/ta-migration-bundle-options.png)\n\n    a.\tMove the slider for Use Accelerator for Teams Collection to **Don’t use**. \n\n    ![](images/ta-use-aft-options.png)\n    \n    This change means the Mod Resorts migration bundle will not use the Accelerator for Teams, but will build an image with Docker and deploy via an Operator into a Red Hat OpenShift cluster.\n\n    The project will still be a source project, with the directory structure set up with a starter application and the Liberty configuration for the application.  \n\n    When not using the Accelerator for Teams, the artifacts produced by Transformation Advisor include the configuration for the Liberty server, the build file for the application, the Dockerfile to produce the deployed application image, and the Operator to deploy the applications into a Red Hat OpenShift cluster.\n\n    b.\tClick **Binary** to change the **Mod Resorts** migration bundle to build from a binary application project.  \n\n    ![](images/ta-build-type-options.png)\n    \n    Changing the selection for any application to deploy as a binary project will not only change the artifacts created, but the application cannot use Accelerator for Teams, as there is not yet an CP4Apps Application Stack that will build and deploy a binary project from Transformation Advisor.\n\n    The user can choose to upload the binary application and its dependencies for the project or provide Maven coordinates to identify the location of the binary application and its dependencies.\n\n    Once the user has uploaded the binaries or provided the Maven coordinates, the user can choose to download the artifacts as a migration bundle.\n\n#### 6.5\tPush the migration bundle into GitHub\n\nThis step requires that you have a public GitHub account. If you do not have a GitHub account, create a free account at: https://github.com \n\n1.  Create a GitHub personal access token.  \n\n    a. In a new tab in the browser, click the **GitHub** bookmark to launch it.\n\n    ![](images/vm-github-bookmark.png)\n \n    b. Log in to your existing GitHub account using your userid and password.  \n    \n    ![](images/github-signin.png)\n\n    c. Once you have logged into your GitHub account, click on your user image in the top right corner and choose **Settings**.\n\n    ![](images/github-settings.png)\n\n    d. On the bottom left of the next screen, click on **Developer settings**.\n\n    ![](images/github-developer-settings.png)\n\n    e. On the next screen, click on **Personal access tokens**.\n \n    ![](images/github-personal-access-token.png)\n\n    f. On the next screen, click on **Generate new token**.\n \n    ![](images/github-new-token.png)\n\n    g. Enter the token Name as: **my-new-token** with these three scopes \n    *\trepo\n    *\tadmin:org\n    *\tadmin:repo_hook\n \n    ![](images/github-token-settings-1.png)\n\n    ![](images/github-token-settings-2.png)\n\n    g.\tAt the bottom of the screen, click **Generate token**.\n\n    ![](images/github-token-settings-3.png)\n\n    h.\t Be sure to save your access token.  It is valid for all repositories for your account. You save it in the **Commands.txt** file located at **/home/ibmdemo/app-mod-labs/dv0200** directory.\n    \n2.\tCreate a public GitHub repo for the application.\n\n    a.\tAt the top right corner of the GitHub page, click **Add** and select New repository to create a new repository:\n\n    ![](images/github-add-new-repo.png)\n\n    b.\tSpecify the Repository name as “my-repo”, and create the new repository as a Public repository with a README.\n \n    ![](images/github-repo-settings.png)\n\n    The URL for your new repository is in the address bar: **<snap>https://</snap>github.com/&lt;your GitHub ID &gt;/my-repo**\n \n    Now you have the three values required to push your migration bundle into GitHub: your repository URL, your GitHub ID and your GitHub personal access token.  \n\n3.\tGo back to Transformation Advisor page, click on the **ModResorts** COllection link in the breadcrumb.\n\n    ![](images/ta-modresorts-collection-link.png)\n4.\tClick on the menu with the “hamburger icon” next to the **Mod Resorts** application analysis and choose **View migration plan**.\n5.  Click on Send to Git to prepare to send the migration bundle for Mod Resorts application to Git.\n\n    ![](images/ta-send-to-git.png)\n6.\tSpecify the GitHub repository URL, your GitHub ID and your GitHub personal access token: Then Scroll down and click **Send to Git**.\n\n    ![](images/ta-send-to-git-2.png)\n5.\tOnce the application artifacts are sent to GitHub, you can now view the contents of the migration bundle in GitHub by refreshing the home page for the repository URL.\n\n    ![](images/github-my-repo.png)\n#### 6.6\tClone the GitHub Repository \n\nIn this section, you clone your GitHub repository on the local workstation and import the source for the application. \n\n1.\tOpen a Terminal window by clicking **Applications**>**Terminal**.\n\n    ![](images/vm-terminal-link.png)\n2.\tFrom the Terminal window, clone the GitHub repository using the following commands:\n\n    ```\n    cd /home/ibmdemo\n    git clone https://github.com/<your GitHub ID>/my-repo\n    ```\n\n    Where &gt;your GitHub IDE&lt; is your GitHub user id.\n\n3.\tChange to the my-repo directory that you just cloned with command:\n\n    ```\n    cd my-repo\n    ```\n4.\tFrom the Terminal window, extract the source code (saved in the /home/ibmdemo/app-mod-labs/dv0200/modresorts_src.zip file) into the local repository source directories using the following command:\n\n    ```\n    unzip /home/ibmdemo/app-mod-labs/dv0200/modresorts_src.zip\n    ```\n\n    Note:  answer A when prompted to replace the index.html file.\n\n#### 6.7\tBuild and Package the Application  \n\nThe source code development activities might not be executed by the same person as the previous steps.  The solutions architect might use Transformation Advisor’s insights to make decisions about the modernization of the application estate and send projects to GitHub for the developer.\n\nThe developer will begin working on the modernization of the application, including any needed source code changes, building and testing using the Accelerator for Teams.\n\nThis lab uses Visual Studio Code (VS Code) with the Codewind extension installed; there are no code changes required for the Mod Resorts application modernization.\n\nApplications which require code changes, due to required Java EE and/or Java SE differences in the modern development environment, would benefit from the combination of the Eclipse Codewind and WebSphere Application Migration Toolkit (WAMT) plugins in the Eclipse Integrated Development Environment (IDE).  \nSee more about the WebSphere Application Migration Toolkit (WAMT) plugin here: http://ibm.biz/WAMT4Eclipse.\n\n\n1.\tGo to the Terminal window and launch VS Code using the following commands: \n\n    ```\n    cd /home/ibmdemo/my-repo \n    code .\n    ```\n\n    The VS Code IDE is displayed.\n\n2.\tIf the local Codewind extension in VS Code is not started, you will need to start it now:\n\n    a.\tClick on Local (Stopped) to start Local Codewind.\n\n    ![](images/vscode-start-codewind.png)\n\n    The Codewind extension will then be started:\n\n3.\tAdd the ModResorts project to Codewind.\n\n    a.\tClick on the icon to Add Existing Project.\n\n    ![](images/vscode-add-project.png)\n\n    b.\tSelect the **/home/ibmdemo/my-repo** directory and click **Add to Local Codewind**.\n\n    ![](images/vscode-add-to-codewind.png)\n\n    c.\tClick **Yes** when Codewind detects that the project is for the Java Application Stack.\n\n   ![](images/vscode-java.png)\n\n    Codewind will detect that the application project is already in the VS Code workspace. Therefore, Codewind builds and starts the application automatically.\n\n    The application state should automatically change to “Running” once the app is built and started. \n\n    ![](images/vscode-my-repo-running.png)\n\n    d.\tIf it seems that the application is not starting, you can view the logs by right-clicking the project name and selecting **Show all logs**.\n\n    ![](images/vscode-show-all-logs.png)\n4.\tOpen the application when it is running.\n\n    a.\tWhen the status of your application changes from Starting to Running, right-click on the application. Then select **Open Application** from the menu. \n\n    ![](images/vscode-open-application.png)\n\n    Opening the application will load the application (running in a container) in the browser.  The Mod Resorts application home page is displayed.\n\n    ![](images/mod-resorts-app-home-page.png)\n\n    b. Click **WHERE TO?** dropdown menu to see the city list.\n\n    ![](images/mod-resorts-app-where-to.png)\n \n    c. Click **PARIS, FRANCE** from the list, it shows the weather of the city.\n\n    ![](images/mod-resorts-app-paris.png)    \n \n    c.\tWhen you are satisfied that the application is ready to deploy outside of the local development and test environment, you commit the inclusion of the application source code and any changes made and push the code (using the Github personal access token) into the Git repository using the following commands in the Terminal window:\n\n    ```\n    cd /home/ibmdemo/my-repo\n    git config --global user.email \"you@example.com\"\n    git config --global user.name \"Your Name\"\n    git add .\n    git commit -m \"added ModResorts source code\"\n    git push \n    ```\n    Note:  If prompted for a user id, specify your public GitHub user id. If prompted for a password by git push, you must specify your Git personal access token in place of the password if your Git account uses two-phase authentication.\n\n### 6.8\tSetup the Tekton Pipeline webhook\n\nTransformation Advisor and the Accelerator for Teams can set up webhooks from the user’s GitHub repository into the Tekton pipelines and trigger the Tekton pipelines when there is a commit to the repository.  \n\nIn this task you configure the Pipeline webhook from Tekton Dashboard.\n\n1.\tFrom the web browser window click the **Tekton Dashboard** bookmark.\n    \n    ![](images/vm-tekton-dashboard-bookmark.png)\n\n2.\tThe Tekton Dashboard is displayed. Click **Webhooks** to go to the pipeline webhooks page.\n\n    ![](images/tekton-webhooks-link.png)\n\n3. In the Create Webhook page, enter **Name** as **my-webhook**, enter **Repository URL** as your **my-repo** GitHub URL and click Add **Access Token** icon.\n\n    ![](images/tekton-create-webhook-1.png)\n\n4. Enter **Access Token** name as **my-new-token**,  copy and paste your GitHub Access Token value to the **Access Token** field and click **Create**.\n\n    ![](images/tekton-create-new-token.png)\n\n5. Select **my-new-token** from the Access Token dropdown list, enter the following values and click **Create**.\n    \n    * **NameSpace** = kabanero\n    * **Pipeline** = java-microprofile-build-deploy-pl\n    * **Service Account** = kabanero-operator\n    * **Docker Registry** = image-registry.openshift-image-registry.svc:5000/kabanero  \n\n    ![](images/tekton-create-webhook-2.png)\n\n    Your Tekton pipeline webhook is created.\n\n    ![](images/tekton-webhook-created.png)\n#### 6.9\tDeploy the application to OpenShift via the Tekton pipeline\nAfter the Tekton pipeline webhook is created, any Git commit will not trigger the pipeline automatically.\n\nIn this task, you make a change to the application code and commit the change to your GitHub repo, this will activate the Tekton pipeline to deploy your application to the OCP cluster.\n\n1.\tGo back to the VS Code environment and open **my-repo/src/main/webapp/index.html** for editing.\n\n    ![](images/vscode-open-index-html.png)\n2.  In line 49, change the city name from **Miami** to **Chicago** and save the change.\n\n    ![](images/vscode-change-city.png)\n\n3.  Execute the commands below to push the code into the Git repository:\n\n    ```\n    cd /home/ibmdemo/my-repo\n    git add .\n    git commit -m \"update ModResorts source code\"\n    git push \n    ```\n    Note:  If prompted for a user id, specify your public GitHub user id. If prompted for a password by git push, you must specify your Git personal access token in place of the password if your Git account uses two-phase authentication.\n    \n4.\tNow go to the Tekton Dashboard window and click **Pipelineruns**, you see your pipeine is activated.\n\n    ![](images/tekton-pipelineruns-link.png)\n \n5.\tClick on the name of the new pipeline to view the live status of the run.\n\n   ![](images/tekton-pipelinerun-link.png)\n \n6.\tWait for the PipelineRun to complete. The Tekton pipeline will take several minutes to complete. As the Pipeline run, you can view its logs to see the details. \n\n   ![](images/tekton-pipelinerun-logs.png)\n7.\tWhen the run has completed successfully, view the running application.\n\n    a.\tGo back to the OCP cluster Web Console page.\n \n    c.\tExpand the **Networking** menu, select **Routes** and change project to **kabanero** project.\n\n    ![](images/ocp-networking-routes-kabanero.png)\n \n    e.\tClick on your Mod Resorts application URL\n\n    ![](images/modresorts-app-route.png)\n    \n    f.\tView your application running in OCP cluster, you can see that the new city name your changed in the **index.html** is displayed.\n\n    ![](images/modresorts-app-updated.png)\n\n \n### 7.\tSummary\n\nIn this lab, you have learned how to modernize a Java application that is running in an on-premise application server environment using Transformation Advisor’s integration with Accelerator for Teams in IBM Cloud Pak for Applications, then deploy it to OpenShift with Application Stacks and Integrated Dev/Ops Toolchain and Pipelines.\n \nAs a part of IBM Application Modernization solutions in IBM Cloud Pak for Applications, Transformation Advisor and the Accelerator for Teams (with Application Stacks and Integrated Dev/Ops Toolchain and Pipelines) helps users effectively to develop, package, deploy and manage modernized applications on a Kubernetes cluster. \n\nTo learn more about IBM Application Modernization solutions, please visit [Cloud Pak for Applications](https://www.ibm.com/cloud/cloud-pak-for-applications).\n\nCongratulations! You have successfully completed the lab “Modernize Java Apps using IBM Transformation Advisor and Cloud Pak for App”.\n","type":"Mdx","contentDigest":"8497a81b5130255c0e5956330ab0fe00","owner":"gatsby-plugin-mdx","counter":7013},"frontmatter":{"title":"Modernize a Java Application using IBM TA and CP4Apps Pipeline","description":null},"exports":{},"rawBody":"---\ntitle: Modernize a Java Application using IBM TA and CP4Apps Pipeline\ndescription: \n---\n\nIBM Cloud Transformation Advisor, also called **Transformation Advisor** (**TA**), bridges the gap between existing development activities and cloud-native development together.  TA will accelerate the development process by creating the configuration and deployment artifacts for an application, then facilitate the developer’s use of the enhanced developer productivity tools in IBM Cloud paks.  \n\nTransformation Advisor will simplify the modernization scenario, creating one development experience for both cloud-native and application modernization. This lowers the on-ramp to cloud development, test, deployment for Java EE developers.\n\n### 1.\tBusiness Scenario\n\nAs shown in the image below, your company has a web application called Mod Resorts, a WebSphere application showing the weather in various locations. Your company wants to move this application from on-premises to the cloud.\n \n![](images/mod-resorts-app-home-page.png)\n\nAs a tech lead, you have already analyzed the application using the Transformation Advisor tool. \n\nBased on the analysis you know that you can move this application from the traditional WebSphere Server environment to a light-weighted Liberty server environment without any code change.  \n\nNow you are planning to use the Transformation Advisor migration plan to create the migration bundle, to containerize the application, and to deploy the Docker container to an OpenShift Kubernetes cluster environment.\n \n### 2.\tObjective\n\nThe objective of this lab is to learn how to use Transformation Advisor to accelerate the development activities required during the modernization of a Java EE application currently deployed to IBM WebSphere Application Server, Oracle WebLogic, Apache Tomcat or Red Hat JBoss Application Server.  The application will be deployed through a continuous integration and continuous delivery (CI/CD) pipeline to the Open Liberty server in the OpenShift Container Platform (OCP) cluster.\n\nThe sample application used in this lab does not require any modification to the source code in its modernization.  This enables the completion of the lab in a pre-determined amount of time.  The modernization of applications that need modifications will be described, but not required for completion of the lab.\n\n### 3.\tPrerequisites\nThe following prerequisites must be completed prior to beginning this lab:\n*\tFamiliarity with basic Linux commands\n*\tHave internet access\n*\tHave completed Lab SU0100 of this lab series and have the CP4Apps installed in IBM Red Hat OpenShift Kubernetes Service (OCP) cluster on IBM Cloud.\n*\tBasic Java app development knowledge\n*\tGitHub account - you can sign up for a free account at: https://github.com\n\n### 4.\tWhat is Already Completed\n\nThe Workstation VM is pre-configured for you to access and work with the OCP cluster in this lab.\n\nThe login credentials for the Workstation VM are provided in your Reservation Details page (**https://www.ibm.com/demos/my-reservations/**).\n\nThe CLI commands used in this lab are listed in the Commands.txt file located at the **/home/ibmdemo/app-mod-labs/dv0200** directory of the Workstation VM for you to copy and paste these commands to the Terminal window during the lab.\n\n### 5.\tLab Tasks\nDuring this lab, you will complete the following tasks:\n*\tLogin to the Workstation VM and open Transformation Advisor\n*\tView the Transformation Advisor insights for a collection of applications and queue managers\n*\tLoad a data collection for the Mod Resorts application currently deployed on-premise in WebSphere Application Server v9\n*\tView the migration bundle contents for the Mod Resorts application\n*\tPush the migration bundle into GitHub \n*\tClone the GitHub repository on the local workstation and import the source for the application\n*\tBuild and package the application in a Liberty container in Codewind using Application Stacks\n*\tCommit and push the application to the GitHub repository\n*\tSetu the Tekton Pipeline webhook for the application’s build and deployment\n*\tDeploy the application to OpenShift via the Tekton pipeline\n\n\n### 6.\tExecute Lab Tasks\n#### 6.1 Log in to the Workstation VM and get started (skip this step if you are using your own workstation)\n1.  Launch the VM from your local workstation web browser with the VM URL.\n \n    ![](images/vm-url.png)\n\n2.\tClick **Connect** to access the VM.\n \n    ![](images/vm-connect.png)\n\n3.\tEnter the password you obtained from the Reservation Details page and click **Send Password**.\n\n    ![](images/vm-password.png)\n\n    The VM desktop is displayed.\n\n    ![](images/vm-desktop.png)\n\n    The Workstation Desktop is displayed. You execute all the lab tasks on this VM.\n \n#### 6.2\tLaunch Transformation Advisor \nIn this lab, you are going to use Transformation Advisor’s capabilities designed to accelerate the development process by creating the configuration and deployment artifacts for an application.\nUsing these artifacts, and Accelerators for Teams, you will learn how to facilitate the use of the enhanced developer productivity tools in IBM Cloud Pak for Applications as the application is deployed to RedHat OpenShift, using the Tekton pipelines.  \n\nThe Transformation Advisor used in the lab is installed as part of IBM Cloud Pak for Applications version 4.1. IBM Transformation Advisor is also available stand-alone (Beta), run locally in Docker on your workstation. Learn more about the stand-alone version of Transformation Advisor: http://ibm.biz/cloudta\n\nThe Transformation Advisor is installed on OCP in IBM Cloud.  In this lab, you use the following steps to access it.\n\nThis task requires to have IBM Cloud Pak for Applications installed on OCP cluster in IBM Cloud. If you have completed the lab0 of this lab series, you can continue, otherwise you need to complete lab0 first.\n\n1. From web browser window, click the IBM Cloud Transformation Advisor bookmark and log in to your IBM Cloud account with your credentials.\n \t\n    ![](images/ta-bookmarked.png) \n\n    The Transformation Advisor home page is displayed.\n\n    ![](images/ta-home-page.png)\n \n#### 6.4\tUpload Application Data into Transformation Advisor\n\nThe Transformation Advisor can evaluate any Java based applications and help to package the good candidate application to move to cloud. In Lab AM0100 of this lab series, you have demonstrated how to use the tool to evaluate the on-premises WebSphere application, Mod Resorts, and have determined that it is suitable to move this application to cloud without any code change. Now you need to move forward to create the application migration bundle with the Transformation Advisor. \n\n1. In the Transformation Advisor page, you first create a new workspace by entering the workspace name as **Evaluation** and then clicking **Next**.\n \n   ![](images/ta-new-workspace.png)\n\n    Note: A workspace is a designated area that houses the migration recommendations provided by Transformation Advisor against your application server environment. You can name and organize these however you want, whether it’s by business application, location or teams. \n\n2. Enter the collection name as **ModResorts** and click **Let’s go**.\n \n    ![](images/ta-new-collection.png)\n\n    Note: Each workspace can be divided into collections for more focused assessment and planning. Like workspaces, collections can be named and organized in whatever way you want.\n\n3. Once the Workspace and Collection are created, you get the data collection options page.  You can either download the Data Collector utility and run it against your application server, or upload an existing data file. In this lab, you are going to use the upload option. Click **Upload data** to go to the upload page.\n\n    ![](images/ta-upload-data.png) \n\n4. Click Drop or Add File.\n\n  ![](images/drop-or-add-file.png)\n \n5. Navigate to **/home/ibmdemo/app-mod-labs/dv0200/DataCollections** directory, select **NewDeafaultAppSrv03.zip** file and click **Open**.\n\n  ![](images/ta-new-default-app-zip.png) \n\n6. Click **Upload**.\n\n    ![](images/ta-new-data-upload.png)\n\n    Transformation Advisor will show its recommendations page with details about modernizing the application to Liberty in IBM Cloud Pak for Applications.\n\n    Note: The modresorts-1.0.war application used in this lab does not require any modification to the source code in its modernization.  This enables the completion of the lab in a pre-determined amount of time.  The modernization of applications that need modifications will be described, but not required for completion of the lab. \n\n    ![](images/ta-recommendation-modresorts-app.png)\n    \n    The Transformation Advisor provides all migration recommendations for all applications deployed to the WAS server based on the specified source and target environments. \n    \n    On the Recommendations page, the identified migration source environment is shown in the Profile section, and the target environment is shown in the Preferred migration section. The data collector tool detects that the source environment is your WebSphere Application Server ND **NewDefaultAppSrv03** Profile. The target environment is Liberty on OpenShift, which is the default target environment.\n\n    The Recommendations page also shows the summary analysis results for all the appllications in the **NewDefaultAppSrv03** environment to be moved to a Liberty on OpenShift environment. \n    \n    For each app, you can see these results:\n    *   Complexity level\n    *   Technology match\n    *   Dependencies\n    *   Issues\n    *   Estimated development cost in days\n\n    For example, if you want to move the modresorts-1_0_war application to Liberty on Private Cloud, the complexity level is Simple and the Tech match is 100 percent. \n\n    A Simple complexity score indicates that the application code does not need to be changed before it can be moved to cloud. The application has no dependency, has 1 minor level issue and the estimated development effort is 0 day.\n\n    ![](images/ta-modresorts-simple.png)\n\n#### 6.4\tView the Migration Bundle\n\nIn this section, you view the migration bundle contents for the Mod Resorts application.  The migration bundle is created by the Transformation Advisor for a quick deployment to cloud while minimizing the migration error.\n\n1.\tClick on the menu with the “hamburger icon” next to the **Mod Resorts** application analysis to display the menu choices and choose **View migration plan**.\n\n    ![](images/ta-view-migration-plan.png)\n    \n    Transformation Advisor will display details about the migration bundle that it generated to accelerate the modernization of this application into Liberty on OpenShift. The migration bundle includes diverse artifacts, depending on the needs of the application.\n\n    The user can choose to create a migration bundle for either of the options below: \n    *\ta binary project of an application (uploading a WAR/EAR file and its dependent libraries), or \n    *\ta source project of an application, so that the application source files can be modernized and maintained.  \n\n    The user can also choose to create a migration bundle that will either:\n    *\tallow the project to integrate with the Accelerator for Teams, making the modernization developer experience align with the developer experience for cloud-native applications\n    *\tdeploy into Red Hat OpenShift cluster via an Operator\n\n    The default selection is for a source project that will integrate with the Accelerator for Teams (derived from the open source project Kabanero.io).\n\n2.\tView the migration bundle settings and functions.\n\n    The artifacts change, depending on the user’s modernization choices for the application.  The default selection for an application that uses only EE7 features and above will be to deploy as a source application project, and to use the Accelerator for Teams.  The project will be a source project, with the directory structure set up with a starter application and the Liberty configuration for the application.  \n\n    To accelerate the application modernization, the artifacts produced by Transformation Advisor include the configuration for the Liberty server, the build file for the application and the Accelerator for Teams configuration files (which can used with the Application Stacks).\n\n    Users are able to choose to download the artifacts as a migration bundle or push the bundle contents into a GitHub repository.\n\n    ![](images/ta-migration-bundle-options.png)\n\n    a.\tMove the slider for Use Accelerator for Teams Collection to **Don’t use**. \n\n    ![](images/ta-use-aft-options.png)\n    \n    This change means the Mod Resorts migration bundle will not use the Accelerator for Teams, but will build an image with Docker and deploy via an Operator into a Red Hat OpenShift cluster.\n\n    The project will still be a source project, with the directory structure set up with a starter application and the Liberty configuration for the application.  \n\n    When not using the Accelerator for Teams, the artifacts produced by Transformation Advisor include the configuration for the Liberty server, the build file for the application, the Dockerfile to produce the deployed application image, and the Operator to deploy the applications into a Red Hat OpenShift cluster.\n\n    b.\tClick **Binary** to change the **Mod Resorts** migration bundle to build from a binary application project.  \n\n    ![](images/ta-build-type-options.png)\n    \n    Changing the selection for any application to deploy as a binary project will not only change the artifacts created, but the application cannot use Accelerator for Teams, as there is not yet an CP4Apps Application Stack that will build and deploy a binary project from Transformation Advisor.\n\n    The user can choose to upload the binary application and its dependencies for the project or provide Maven coordinates to identify the location of the binary application and its dependencies.\n\n    Once the user has uploaded the binaries or provided the Maven coordinates, the user can choose to download the artifacts as a migration bundle.\n\n#### 6.5\tPush the migration bundle into GitHub\n\nThis step requires that you have a public GitHub account. If you do not have a GitHub account, create a free account at: https://github.com \n\n1.  Create a GitHub personal access token.  \n\n    a. In a new tab in the browser, click the **GitHub** bookmark to launch it.\n\n    ![](images/vm-github-bookmark.png)\n \n    b. Log in to your existing GitHub account using your userid and password.  \n    \n    ![](images/github-signin.png)\n\n    c. Once you have logged into your GitHub account, click on your user image in the top right corner and choose **Settings**.\n\n    ![](images/github-settings.png)\n\n    d. On the bottom left of the next screen, click on **Developer settings**.\n\n    ![](images/github-developer-settings.png)\n\n    e. On the next screen, click on **Personal access tokens**.\n \n    ![](images/github-personal-access-token.png)\n\n    f. On the next screen, click on **Generate new token**.\n \n    ![](images/github-new-token.png)\n\n    g. Enter the token Name as: **my-new-token** with these three scopes \n    *\trepo\n    *\tadmin:org\n    *\tadmin:repo_hook\n \n    ![](images/github-token-settings-1.png)\n\n    ![](images/github-token-settings-2.png)\n\n    g.\tAt the bottom of the screen, click **Generate token**.\n\n    ![](images/github-token-settings-3.png)\n\n    h.\t Be sure to save your access token.  It is valid for all repositories for your account. You save it in the **Commands.txt** file located at **/home/ibmdemo/app-mod-labs/dv0200** directory.\n    \n2.\tCreate a public GitHub repo for the application.\n\n    a.\tAt the top right corner of the GitHub page, click **Add** and select New repository to create a new repository:\n\n    ![](images/github-add-new-repo.png)\n\n    b.\tSpecify the Repository name as “my-repo”, and create the new repository as a Public repository with a README.\n \n    ![](images/github-repo-settings.png)\n\n    The URL for your new repository is in the address bar: **<snap>https://</snap>github.com/&lt;your GitHub ID &gt;/my-repo**\n \n    Now you have the three values required to push your migration bundle into GitHub: your repository URL, your GitHub ID and your GitHub personal access token.  \n\n3.\tGo back to Transformation Advisor page, click on the **ModResorts** COllection link in the breadcrumb.\n\n    ![](images/ta-modresorts-collection-link.png)\n4.\tClick on the menu with the “hamburger icon” next to the **Mod Resorts** application analysis and choose **View migration plan**.\n5.  Click on Send to Git to prepare to send the migration bundle for Mod Resorts application to Git.\n\n    ![](images/ta-send-to-git.png)\n6.\tSpecify the GitHub repository URL, your GitHub ID and your GitHub personal access token: Then Scroll down and click **Send to Git**.\n\n    ![](images/ta-send-to-git-2.png)\n5.\tOnce the application artifacts are sent to GitHub, you can now view the contents of the migration bundle in GitHub by refreshing the home page for the repository URL.\n\n    ![](images/github-my-repo.png)\n#### 6.6\tClone the GitHub Repository \n\nIn this section, you clone your GitHub repository on the local workstation and import the source for the application. \n\n1.\tOpen a Terminal window by clicking **Applications**>**Terminal**.\n\n    ![](images/vm-terminal-link.png)\n2.\tFrom the Terminal window, clone the GitHub repository using the following commands:\n\n    ```\n    cd /home/ibmdemo\n    git clone https://github.com/<your GitHub ID>/my-repo\n    ```\n\n    Where &gt;your GitHub IDE&lt; is your GitHub user id.\n\n3.\tChange to the my-repo directory that you just cloned with command:\n\n    ```\n    cd my-repo\n    ```\n4.\tFrom the Terminal window, extract the source code (saved in the /home/ibmdemo/app-mod-labs/dv0200/modresorts_src.zip file) into the local repository source directories using the following command:\n\n    ```\n    unzip /home/ibmdemo/app-mod-labs/dv0200/modresorts_src.zip\n    ```\n\n    Note:  answer A when prompted to replace the index.html file.\n\n#### 6.7\tBuild and Package the Application  \n\nThe source code development activities might not be executed by the same person as the previous steps.  The solutions architect might use Transformation Advisor’s insights to make decisions about the modernization of the application estate and send projects to GitHub for the developer.\n\nThe developer will begin working on the modernization of the application, including any needed source code changes, building and testing using the Accelerator for Teams.\n\nThis lab uses Visual Studio Code (VS Code) with the Codewind extension installed; there are no code changes required for the Mod Resorts application modernization.\n\nApplications which require code changes, due to required Java EE and/or Java SE differences in the modern development environment, would benefit from the combination of the Eclipse Codewind and WebSphere Application Migration Toolkit (WAMT) plugins in the Eclipse Integrated Development Environment (IDE).  \nSee more about the WebSphere Application Migration Toolkit (WAMT) plugin here: http://ibm.biz/WAMT4Eclipse.\n\n\n1.\tGo to the Terminal window and launch VS Code using the following commands: \n\n    ```\n    cd /home/ibmdemo/my-repo \n    code .\n    ```\n\n    The VS Code IDE is displayed.\n\n2.\tIf the local Codewind extension in VS Code is not started, you will need to start it now:\n\n    a.\tClick on Local (Stopped) to start Local Codewind.\n\n    ![](images/vscode-start-codewind.png)\n\n    The Codewind extension will then be started:\n\n3.\tAdd the ModResorts project to Codewind.\n\n    a.\tClick on the icon to Add Existing Project.\n\n    ![](images/vscode-add-project.png)\n\n    b.\tSelect the **/home/ibmdemo/my-repo** directory and click **Add to Local Codewind**.\n\n    ![](images/vscode-add-to-codewind.png)\n\n    c.\tClick **Yes** when Codewind detects that the project is for the Java Application Stack.\n\n   ![](images/vscode-java.png)\n\n    Codewind will detect that the application project is already in the VS Code workspace. Therefore, Codewind builds and starts the application automatically.\n\n    The application state should automatically change to “Running” once the app is built and started. \n\n    ![](images/vscode-my-repo-running.png)\n\n    d.\tIf it seems that the application is not starting, you can view the logs by right-clicking the project name and selecting **Show all logs**.\n\n    ![](images/vscode-show-all-logs.png)\n4.\tOpen the application when it is running.\n\n    a.\tWhen the status of your application changes from Starting to Running, right-click on the application. Then select **Open Application** from the menu. \n\n    ![](images/vscode-open-application.png)\n\n    Opening the application will load the application (running in a container) in the browser.  The Mod Resorts application home page is displayed.\n\n    ![](images/mod-resorts-app-home-page.png)\n\n    b. Click **WHERE TO?** dropdown menu to see the city list.\n\n    ![](images/mod-resorts-app-where-to.png)\n \n    c. Click **PARIS, FRANCE** from the list, it shows the weather of the city.\n\n    ![](images/mod-resorts-app-paris.png)    \n \n    c.\tWhen you are satisfied that the application is ready to deploy outside of the local development and test environment, you commit the inclusion of the application source code and any changes made and push the code (using the Github personal access token) into the Git repository using the following commands in the Terminal window:\n\n    ```\n    cd /home/ibmdemo/my-repo\n    git config --global user.email \"you@example.com\"\n    git config --global user.name \"Your Name\"\n    git add .\n    git commit -m \"added ModResorts source code\"\n    git push \n    ```\n    Note:  If prompted for a user id, specify your public GitHub user id. If prompted for a password by git push, you must specify your Git personal access token in place of the password if your Git account uses two-phase authentication.\n\n### 6.8\tSetup the Tekton Pipeline webhook\n\nTransformation Advisor and the Accelerator for Teams can set up webhooks from the user’s GitHub repository into the Tekton pipelines and trigger the Tekton pipelines when there is a commit to the repository.  \n\nIn this task you configure the Pipeline webhook from Tekton Dashboard.\n\n1.\tFrom the web browser window click the **Tekton Dashboard** bookmark.\n    \n    ![](images/vm-tekton-dashboard-bookmark.png)\n\n2.\tThe Tekton Dashboard is displayed. Click **Webhooks** to go to the pipeline webhooks page.\n\n    ![](images/tekton-webhooks-link.png)\n\n3. In the Create Webhook page, enter **Name** as **my-webhook**, enter **Repository URL** as your **my-repo** GitHub URL and click Add **Access Token** icon.\n\n    ![](images/tekton-create-webhook-1.png)\n\n4. Enter **Access Token** name as **my-new-token**,  copy and paste your GitHub Access Token value to the **Access Token** field and click **Create**.\n\n    ![](images/tekton-create-new-token.png)\n\n5. Select **my-new-token** from the Access Token dropdown list, enter the following values and click **Create**.\n    \n    * **NameSpace** = kabanero\n    * **Pipeline** = java-microprofile-build-deploy-pl\n    * **Service Account** = kabanero-operator\n    * **Docker Registry** = image-registry.openshift-image-registry.svc:5000/kabanero  \n\n    ![](images/tekton-create-webhook-2.png)\n\n    Your Tekton pipeline webhook is created.\n\n    ![](images/tekton-webhook-created.png)\n#### 6.9\tDeploy the application to OpenShift via the Tekton pipeline\nAfter the Tekton pipeline webhook is created, any Git commit will not trigger the pipeline automatically.\n\nIn this task, you make a change to the application code and commit the change to your GitHub repo, this will activate the Tekton pipeline to deploy your application to the OCP cluster.\n\n1.\tGo back to the VS Code environment and open **my-repo/src/main/webapp/index.html** for editing.\n\n    ![](images/vscode-open-index-html.png)\n2.  In line 49, change the city name from **Miami** to **Chicago** and save the change.\n\n    ![](images/vscode-change-city.png)\n\n3.  Execute the commands below to push the code into the Git repository:\n\n    ```\n    cd /home/ibmdemo/my-repo\n    git add .\n    git commit -m \"update ModResorts source code\"\n    git push \n    ```\n    Note:  If prompted for a user id, specify your public GitHub user id. If prompted for a password by git push, you must specify your Git personal access token in place of the password if your Git account uses two-phase authentication.\n    \n4.\tNow go to the Tekton Dashboard window and click **Pipelineruns**, you see your pipeine is activated.\n\n    ![](images/tekton-pipelineruns-link.png)\n \n5.\tClick on the name of the new pipeline to view the live status of the run.\n\n   ![](images/tekton-pipelinerun-link.png)\n \n6.\tWait for the PipelineRun to complete. The Tekton pipeline will take several minutes to complete. As the Pipeline run, you can view its logs to see the details. \n\n   ![](images/tekton-pipelinerun-logs.png)\n7.\tWhen the run has completed successfully, view the running application.\n\n    a.\tGo back to the OCP cluster Web Console page.\n \n    c.\tExpand the **Networking** menu, select **Routes** and change project to **kabanero** project.\n\n    ![](images/ocp-networking-routes-kabanero.png)\n \n    e.\tClick on your Mod Resorts application URL\n\n    ![](images/modresorts-app-route.png)\n    \n    f.\tView your application running in OCP cluster, you can see that the new city name your changed in the **index.html** is displayed.\n\n    ![](images/modresorts-app-updated.png)\n\n \n### 7.\tSummary\n\nIn this lab, you have learned how to modernize a Java application that is running in an on-premise application server environment using Transformation Advisor’s integration with Accelerator for Teams in IBM Cloud Pak for Applications, then deploy it to OpenShift with Application Stacks and Integrated Dev/Ops Toolchain and Pipelines.\n \nAs a part of IBM Application Modernization solutions in IBM Cloud Pak for Applications, Transformation Advisor and the Accelerator for Teams (with Application Stacks and Integrated Dev/Ops Toolchain and Pipelines) helps users effectively to develop, package, deploy and manage modernized applications on a Kubernetes cluster. \n\nTo learn more about IBM Application Modernization solutions, please visit [Cloud Pak for Applications](https://www.ibm.com/cloud/cloud-pak-for-applications).\n\nCongratulations! You have successfully completed the lab “Modernize Java Apps using IBM Transformation Advisor and Cloud Pak for App”.\n","fileAbsolutePath":"/Users/yitang/Downloads/app-mod/src/pages/labs/devops-labs/dv0300-devops/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}